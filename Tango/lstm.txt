==PROF== Connected to process 10982 (/home/burak/Documents/CudaBenchmarks/Tango-master/GPU/LSTM/lstm)
==PROF== Profiling "ExecuteLSTM" - 1: 0%....50%....100%The result for i=0 is 0.943991 and i=1 is 0.908974
 - 39 passes
==PROF== Disconnected from process 10982
[10982] lstm@127.0.0.1
  ExecuteLSTM(double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*), 2023-Mar-21 16:31:00, Context 1, Stream 7
    Section: GPU Speed Of Light
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           1,51
    SM Frequency                                                             cycle/nsecond                           1,34
    Elapsed Cycles                                                                   cycle                         53.648
    Memory [%]                                                                           %                           4,42
    SOL DRAM                                                                             %                           4,42
    Duration                                                                       usecond                          40,03
    SOL L1/TEX Cache                                                                     %                          19,81
    SOL L2 Cache                                                                         %                           3,08
    SM Active Cycles                                                                 cycle                       3.769,07
    SM [%]                                                                               %                           4,63
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device. Look at Launch Statistics for   
          more details.                                                                                                 

    OK    The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 3% of its fp64 peak performance.                                      

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           0,10
    Executed Ipc Elapsed                                                        inst/cycle                           0,01
    Issue Slots Busy                                                                     %                           2,49
    Issued Ipc Active                                                           inst/cycle                           0,10
    SM Busy                                                                              %                          65,74
    ---------------------------------------------------------------------- --------------- ------------------------------
          FP64 is the highest-utilized pipeline (65.7%). It executes 64-bit floating point operations. The pipeline is  
          well-utilized and might become a bottleneck if more work is added.                                            

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           8,55
    Mem Busy                                                                             %                           2,91
    Max Bandwidth                                                                        %                           4,42
    L1/TEX Hit Rate                                                                      %                           1,65
    L2 Hit Rate                                                                          %                          10,24
    Mem Pipes Busy                                                                       %                           1,63
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Instructions Per Active Issue Slot                                          inst/cycle                              1
    One or More Eligible                                                                 %                           2,73
    Issued Warp Per Scheduler                                                                                        0,03
    No Eligible                                                                          %                          97,27
    Active Warps Per Scheduler                                                        warp                           1,03
    Eligible Warps Per Scheduler                                                      warp                           0,03
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 36.6 cycles. This might leave hardware resources underutilized and may lead to    
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.03 active warps per scheduler, but only an average of 0.03 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps either increase the number of active warps or reduce the time the active warps are stalled.    

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                          37,79
    Warp Cycles Per Executed Instruction                                             cycle                          37,99
    Warp Cycles Per Issue Active                                                      warp                          37,79
    Avg. Active Threads Per Warp                                                                                    22,64
    Avg. Not Predicated Off Threads Per Warp                                                                        22,52
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average each warp of this kernel spends 28.8 cycles being stalled waiting for a scoreboard dependency on a 
          L1TEX (local, global, surface, texture) operation. This represents about 76.1% of the total average of 37.8   
          cycles between issuing two instructions. To reduce the number of cycles waiting on L1TEX data accesses        
          verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit      
          rates by increasing data locality or by changing the cache configuration, and consider moving frequently      
          used data to shared memory.                                                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is         
          achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early     
          thread completion, and divergent flow control can significantly lower the number of active threads in a warp  
          per cycle. This kernel achieves an average of 22.6 threads being active per cycle. This is further reduced    
          to 22.5 threads per warp due to predication. The compiler may use predication to avoid an actual branch.      
          Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads  
          execute the instructions. Try to avoid different execution paths within a warp when possible. In addition,    
          ensure your kernel makes use of Independent Thread Scheduling, which allows a warp to reconverge after a      
          data-dependent conditional block by explicitly calling __syncwarp().                                          

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                          93,48
    Executed Instructions                                                             inst                          5.235
    Avg. Issued Instructions Per Scheduler                                            inst                          93,96
    Issued Instructions                                                               inst                          5.262
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        100
    Grid Size                                                                                                           1
    Registers Per Thread                                                   register/thread                             66
    Shared Memory Configuration Size                                                 Kbyte                          32,77
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                             byte/block                              0
    Static Shared Memory Per Block                                              byte/block                            800
    Threads                                                                         thread                            100
    Waves Per SM                                                                                                     0,01
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Threads are executed in groups of 32 threads called warps. This kernel launch is configured to execute 100    
          threads per block. Consequently, some threads in a warp are masked off and those hardware resources are       
          unused. Try changing the number of threads per block to be a multiple of 32 threads. Between 128 and 256      
          threads per block is a good initial range for experimentation. Use smaller thread blocks rather than one      
          large thread block per multiprocessor if latency affects performance. This is particularly beneficial to      
          kernels that frequently call __syncthreads().                                                                 
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The grid for this launch is configured to execute only 1 blocks, which is less than the GPU's 14              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources.            

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              7
    Block Limit Shared Mem                                                           block                             64
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                             28
    Theoretical Occupancy                                                                %                          87,50
    Achieved Occupancy                                                                   %                          11,47
    Achieved Active Warps Per SM                                                      warp                           3,67
    ---------------------------------------------------------------------- --------------- ------------------------------

